{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","Components/Container.js","redux/contacts/contacts-type.js","redux/contacts/contacts-actions.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","name","number","type","types","payload","id","shortid","generate","contactId","value","connect","dispatch","onSubmit","contactsActions","useState","setName","setNumber","handleChange","e","currentTarget","preventDefault","className","styles","form_section","form_label","pattern","title","required","onChange","form_input","form_button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","contacts","items","onClick","contactActions","list_section","map","list_element","list_button","state","onFilter","target","filter_label","filter_input","App","React","Component","combineReducers","rootReduser","contactsReducer","store","createStore","composeWithDevTools","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c609bab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__3viXq\",\"filter_input\":\"Filter_filter_input__2-r1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_section\":\"ContactForm_form_section__B8dQK\",\"form_label\":\"ContactForm_form_label__2qUnN\",\"form_input\":\"ContactForm_form_input__1A6KT\",\"form_button\":\"ContactForm_form_button__10oC_\"};","import React from \"react\";\r\n\r\nconst Container = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Container;\r\n","export default {\r\n  ADD: \"contacts/Add\",\r\n  DELETE: \"contacts/Delete\",\r\n  CHANGE_FILTER: \"contacts/ChangeFilter\",\r\n};\r\n","import types from \"./contacts-type\";\r\nimport shortid from \"shortid\";\r\nconst addContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = (contactId) => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = (value) => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport React from \"react\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form_section}>\r\n      <label className={styles.form_label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          className={styles.form_input}\r\n        />\r\n      </label>\r\n      <label className={styles.form_label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          className={styles.form_input}\r\n        ></input>\r\n      </label>\r\n\r\n      <button type=\"submit\" className={styles.form_button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDisparchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDisparchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport contactActions from \"../../redux/contacts/contacts-actions\";\r\nconst ContactList = ({ contacts, onClick }) => (\r\n  <ul className={styles.list_section}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={styles.list_element}>\r\n        <span>{name}: </span>\r\n        <span>{number} </span>\r\n        <button\r\n          className={styles.list_button}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            onClick(id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onClick: (id) => dispatch(contactActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  return (\r\n    <label className={styles.filter_label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onFilter}\r\n        className={styles.filter_input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilter: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport Container from \"./Components/Container\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\n\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h1>Contacts</h1>\n        <Filter />\n\n        <ContactList />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport types from \"./contacts-type\";\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter((contact) => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nconst rootReduser = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReduser, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nconsole.log(store);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_section\":\"ContactList_list_section__ToVOP\",\"list_element\":\"ContactList_list_element__1ex-z\",\"list_button\":\"ContactList_list_button__3wUSu\"};"],"sourceRoot":""}